# # Publish joint_states
# joint_state_controller:
#   type: joint_state_controller/JointStateController
#   publish_rate: 50
joint_state_controller:
    type: joint_state_controller/JointStateController
    publish_rate: 50

# Configure effort-based trajectory controller for the Panda arm
km1:
  arm_joint_controller:
    type: "position_controllers/JointTrajectoryController"
    joints:
      - joint1
      - joint2
      - joint3
      - joint4
      - joint5
      - joint6
    constraints:
      goal_time: 2.0
      stopped_velocity_tolerance: 0  # 停止时的速度容忍度
      joint1:
        goal: 0.01  # 每个关节的目标容忍度（位置误差）
        trajectory: 0.01  # 轨迹跟踪误差容忍度
      joint2:
        goal: 0.01
        trajectory: 0.01
      joint3:
        goal: 0.01  # 放宽 joint3 的位置误差要求
        trajectory: 0.01
      joint4:
        goal: 0.01
        trajectory: 0.01
      joint5:
        goal: 0.01
        trajectory: 0.01
      joint6:
        goal: 0.01
        trajectory: 0.01

  gazebo_ros_control:
    pid_gains:
      joint1:   {p: 1000.0, i: 0.0, d: 0.1, i_clamp: 0.0}
      joint2:   {p: 1000.0, i: 0.0, d: 0.1, i_clamp: 0.0}
      joint3:   {p: 1000.0, i: 0.0, d: 0.1, i_clamp: 0.0}
      joint4:   {p: 1000.0, i: 0.0, d: 0.1, i_clamp: 0.0}
      joint5:   {p: 1000.0, i: 0.0, d: 0.1, i_clamp: 0.0}
      joint6:   {p: 1000.0, i: 0.0, d: 0.1, i_clamp: 0.0}

    state_publish_rate: 25
    constraints:
        goal_time: 2.0

controller_manager_ns: controller_manager
controller_list:
  - name: km1/arm_joint_controller
    action_ns: follow_joint_trajectory
    type: FollowJointTrajectory
    default: true
    joints:
      - joint1
      - joint2
      - joint3
      - joint4
      - joint5
      - joint6
initial:  # Define initial robot poses per group
  - group: manipulator
    pose: home